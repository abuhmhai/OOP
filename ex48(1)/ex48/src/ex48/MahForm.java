/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ex48;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tung
 */
public class MahForm extends javax.swing.JFrame {

    public List<SinhVien> list_sinh_vien;//Biến gán trỏ vào
    
    /**
     * Creates new form MahForm
     */
    //public MahForm() {
    public MahForm(List<SinhVien> list_sv) {
        initComponents();
        this.jButton3.setEnabled(false); 
        //this.jButton2.setEnabled(false);  
        //this.jButton4.setEnabled(false); 
        this.list_sinh_vien = list_sv;
        //Đổ dữ liệu từ list_sv vào table
        DefaultTableModel model;//Đưa dữ liệu vào bảng từ lần đánh chạy code
        model = (DefaultTableModel)this.jTable1.getModel();      
        for (int i = 0; i < this.list_sinh_vien.size(); i++){
            Object[] one_Row;
            one_Row = new Object[]{list_sinh_vien.get(i).maSV, list_sinh_vien.get(i).name, list_sinh_vien.get(i).age, list_sinh_vien.get(i).gender};
            model.addRow(one_Row);
        }
        ///////
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tên: ");

        jLabel2.setText("Mã SV:");

        jLabel3.setText("Tuổi: ");

        jLabel4.setText("Giới tính:");

        jTextField1.setName("jTextField1"); // NOI18N
        jTextField1.setNextFocusableComponent(jTextField3);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });

        jTextField3.setName("jTextField2"); // NOI18N
        jTextField3.setNextFocusableComponent(jTextField2);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        jTextField3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField3KeyTyped(evt);
            }
        });

        jTextField2.setName("jTextField3"); // NOI18N
        jTextField2.setNextFocusableComponent(jRadioButton1);
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Nam");
        jRadioButton1.setNextFocusableComponent(jRadioButton2);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Nữ");
        jRadioButton2.setNextFocusableComponent(jRadioButton3);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ và tên", "Tuổi", "Giới tính"
            }
        ));
        jTable1.setNextFocusableComponent(jButton1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Còn lại");
        jRadioButton3.setNextFocusableComponent(jButton2);

        jButton1.setText("Thoát");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Tìm kiếm");
        jButton2.setNextFocusableComponent(jButton3);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton2KeyTyped(evt);
            }
        });

        jButton3.setText("Thêm");
        jButton3.setInheritsPopupMenu(true);
        jButton3.setNextFocusableComponent(jButton5);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Xóa");
        jButton4.setNextFocusableComponent(jTable1);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Sửa");
        jButton5.setNextFocusableComponent(jButton4);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jButton5.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jButton5KeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jRadioButton3))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 89, Short.MAX_VALUE))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton3))))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        boolean timthay = false;
        
        for (int row = 0; row < jTable1.getRowCount(); row++) {
        //String existingMaSV = jTable1.getValueAt(row, 0).toString();
            String existingMaSV = (String)jTable1.getValueAt(row, 0);
            //String existinghoten = (String)jTable1.getValueAt(row, 1);
            //int existingtuoi = (int)jTable1.getValueAt(row, 2);
            if (existingMaSV.equals(this.jTextField1.getText())) {
                //JOptionPane.showMessageDialog(this, existinghoten  + existingtuoi , "Thông tin", JOptionPane.ERROR_MESSAGE);
                JOptionPane.showMessageDialog(this,(String)jTable1.getValueAt(row, 1)+(int)jTable1.getValueAt(row, 2)+(String)jTable1.getValueAt(row,3), "thông tin", JOptionPane.ERROR_MESSAGE);
                timthay=true;
                break;
            }      
        }
        if (timthay==false)
        {
            JOptionPane.showMessageDialog(this, "Không tồn tại", "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) { // Kiểm tra xem có hàng nào đang được chọn không
        // Lấy dữ liệu từ các trường văn bản và nút radio tương ứng
            String id = jTextField1.getText();
            String name = jTextField3.getText();
            int age = Integer.parseInt(jTextField2.getText());
            String gender = "";
            if (jRadioButton1.isSelected()) {
                gender = "Nam";
            } else if (jRadioButton2.isSelected()) {
                gender = "Nữ";
            } else if (jRadioButton3.isSelected()) {
                gender = "Còn lại";
            }
        // Cập nhật dữ liệu vào hàng đã chọn trong bảng
        model.setValueAt(id, selectedRow, 0);
        model.setValueAt(name, selectedRow, 1);
        model.setValueAt(age, selectedRow, 2);
        model.setValueAt(gender, selectedRow, 3);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model;
        model = (DefaultTableModel)this.jTable1.getModel();
        //Object [] rowData = {"000001","Nguyễn Tiến Dũng",19,"nam"};  //method addRow yc 1 mảng
        int tuoi;
        tuoi = Integer.parseInt(this.jTextField2.getText());
        //Object [] rowData = {this.jTextField1.getText(),this.jTextField3.getText(),tuoi,this.jTextField4.getText()};
        Object [] rowData = {this.jTextField1.getText(),this.jTextField3.getText(),tuoi,""};
        //Object [] rowData;
        //if(this.jRadioButton1.isSelected())
            //rowData = (Object []){this.jTextField1.getText(),this.jTextField3.getText(),tuoi,"nam"};
            //rowData = Object[] [this.jTextField1.getText(),this.jTextField3.getText(),tuoi,this.jTextField4.getText()];
        if (this.jRadioButton1.isSelected())  {  
            rowData[3]="Nam";}
        if (this.jRadioButton2.isSelected()){
            rowData[3]="Nữ";}
        if (this.jRadioButton3.isSelected()){
            rowData[3]="Còn lại";      }
        boolean hople;
        hople=true;
        if(this.jTextField1.getText().length() !=9)
        {
            hople=false;
        }
        //ktra co 1 ki tu k la c/s =>false
        for(int i=0; i<this.jTextField1.getText().length();i++)
        {
            char c = this.jTextField1.getText().charAt(i);
            if (Character.isDigit(c)==false){
                hople=false;
                break;
            }
        }
        String hoten=this.jTextField3.getText();
        int masv=Integer.parseInt(this.jTextField1.getText());
        if ( hoten.isEmpty()){
            hople=false;
            
        }else{
            this.jButton3.setEnabled(true);
            //this.jButton5.setEnabled(false); 
            //this.jButton4.setEnabled(false);   
        }      
       /* String gt =this.jTextField4.getText();
        if(!gt.isEmpty()&& !gt.equalsIgnoreCase("nam")&& !gt.equalsIgnoreCase("nữ")){
            hople=false;
        }
        if ( this.jTextField3.getText().length()>0 && this.jTextField3.getText().charAt(0)=='0' ){
            hople=false;
        }
         */
    
    // Kiểm tra nếu dữ liệu không hợp lệ
    // Ví dụ: Kiểm tra xem các trường không được để trống
    
       //if (studentID.isEmpty() ) {
        //isValid = false;
    //Đièu
    if (tuoi<9 || tuoi>80){
        JOptionPane.showMessageDialog(this, " tuổi chỉ từ 9 đến 80", "Lỗi", JOptionPane.ERROR_MESSAGE);
        hople = false;
    }
    // Kiểm tra mã Sinh Viên đã tồn tại trong bảng
    for (int row = 0; row < jTable1.getRowCount(); row++) {
        //String existingMaSV = jTable1.getValueAt(row, 0).toString();
        String existingMaSV = (String)jTable1.getValueAt(row, 0);
        //String existTen = (String)jTable1.getValueAt(row, 1);
        //int exitstTuoi = Integer.parseInt((String) jTable1.getValueAt(row, 2));
        if (existingMaSV.equals(this.jTextField1.getText())) {
            JOptionPane.showMessageDialog(this, "Mã Sinh Viên đã tồn tại trong bảng.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            hople = false;
        }
    }
    ///////////////////////////////////////////
    //if(this.jRadioButton1.isSelected())
      //  JOptionPane.showMessageDialog(null,"Nam");
      
      //if(this.jRadioButton1.isSelected())
      //  JOptionPane.showMessageDialog(null,"Nữ");
      
   //   if(this.jRadioButton1.isSelected())
    //    JOptionPane.showMessageDialog(null,"Còn lại");
      
         
        if (hople==true){
            model.addRow(rowData);
            this.jTextField1.setText("");
            this.jTextField2.setText("");
            this.jTextField3.setText("");
            //this.jTextField4.setText("");
            this.jRadioButton1.setSelected(false);
            this.jRadioButton2.setSelected(false);
            this.jRadioButton3.setSelected(false);
            
            this.jTextField1.requestFocusInWindow();
            
        }
        else{
            JOptionPane.showMessageDialog(null,"Du lieu không hợp lệ");
            this.jTextField1.requestFocusInWindow();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        boolean enableButton = !(this.jTextField1.getText().isEmpty() || this.jTextField3.getText().isEmpty());
        this.jButton3.setEnabled(enableButton);
        char c=evt.getKeyChar();
        if (Character.isDigit(c)==false){
            evt.consume();
        }
        
        
        
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField3KeyTyped
        // TODO add your handling code here:
        boolean enableButton = !(this.jTextField1.getText().isEmpty() || this.jTextField3.getText().isEmpty());
        this.jButton3.setEnabled(enableButton);
        boolean enabbutt = !(this.jTextField1.getText().isEmpty());
        //this.jButton2.setEnabled(enabbutt); 
        //this.jButton4.setEnabled(enableButton); 
        boolean enable = !(this.jTextField1.getText().isEmpty());
        this.jButton2.setEnabled(enable); 
        char c = evt.getKeyChar();
        if(Character.isLetter(c)==false){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField3KeyTyped

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model;
        model = (DefaultTableModel)this.jTable1.getModel();
        for (int row = 0; row < jTable1.getRowCount(); row++) {
        //String existingMaSV = jTable1.getValueAt(row, 0).toString();
            String existingMaSV = (String)jTable1.getValueAt(row, 0);
            if(existingMaSV.equals(this.jTextField1.getText())){
                model.removeRow(row);//Xóa cả bảng tương ứng với MaSV
                return;
            }
         }
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2KeyTyped

    private void jButton5KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton5KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5KeyTyped

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if(Character.isDigit(c)==false){
            evt.consume();
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:   
        /*DefaultTableModel model;
        model = (DefaultTableModel)this.jTable1.getModel();*/
        int selectRow = jTable1.getSelectedRow();
        if (selectRow >= 0){
            String MaSV = (String)jTable1.getValueAt(selectRow, 0);
            String ten = jTable1.getValueAt(selectRow, 1).toString();
            int tuoi = (int)(jTable1.getValueAt(selectRow, 2));
            String gender = jTable1.getValueAt(selectRow, 3).toString();
            this.jTextField1.setText(MaSV);
            this.jTextField2.setText(String.valueOf(tuoi));
            this.jTextField3.setText(ten);
            if (gender.equalsIgnoreCase("nam")){
                this.jRadioButton1.isSelected();
            }
            if (gender.equalsIgnoreCase("nữ")){
                this.jRadioButton2.isSelected();
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MahForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MahForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MahForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MahForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MahForm().setVisible(true);
//            }
//        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
